name: solar-system-workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
      - feature

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
   unit-testing:
    strategy:
      matrix:
        nodejs_version: [18, 20]
        operating_system: [ubuntu-latest]
        # exclude:
        #   - nodejs_version: 18
        #     operating_system: macos-latest
    runs-on: ${{ matrix.operating_system }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: setup nodejs ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v4
        with:
         node-version: ${{ matrix.nodejs_version }}

      - name: Cache npm 
        uses: actions/cache@v4
        with:
           path: node_modules
           key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: install dependencies
        run: npm install

      - name: unit unit-testing
        run: npm test

      - name: Archive artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result-${{ matrix.operating_system}}-node${{ matrix.nodejs_version}}
          path: test-results.xml

   code-coverage:
     runs-on: ubuntu-latest
     steps:
      - name: checkout repo
        uses: actions/checkout@v4
      
      - name: setup nodejs 18
        uses: actions/setup-node@v4
        with:
         node-version: 18
      
      - name: Cache npm 
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: install dependencies
        run: npm install

      - name: run code coverage
        run: npm run coverage
        continue-on-error: true

      - name: Archive test result
        uses: actions/upload-artifact@v4
        with: 
          name: code-coverage-report
          path: coverage
          retention-days: 1

   docker-login:
    runs-on: ubuntu-latest
    needs: [unit-testing, code-coverage]
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: login to github registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image for testing
        uses: docker/build-push-action@v6
        with:
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      - name: Docker image testing
        run: |
          docker images
          docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
          
          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo $IP

          echo Testing Image URL using wget
          wget -qO - 127.0.0.1:3000/live | grep live

      - name: Container registry push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}